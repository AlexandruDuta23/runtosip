import { query } from '../../db';
import bcrypt from 'bcryptjs';

async function migrate() {
  await query(`
    CREATE TABLE IF NOT EXISTS admins (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      username TEXT UNIQUE NOT NULL,
      password_hash TEXT NOT NULL
    );
  `);

  // Seed initial admin if none exists
  const existing = await query<{ count: string }>(`SELECT COUNT(*)::text as count FROM admins`);
  if (existing.rows[0] && Number(existing.rows[0].count) === 0) {
    const username = process.env.INIT_ADMIN_USER || 'admin';
    const password = process.env.INIT_ADMIN_PASS || 'admin123';
    const hash = await bcrypt.hash(password, 10);
    await query(`INSERT INTO admins (username, password_hash) VALUES ($1, $2)`, [username, hash]);
    // eslint-disable-next-line no-console
    console.log(`Seeded initial admin: ${username}`);
  }
}

migrate()
  .then(() => process.exit(0))
  .catch((err) => {
    // eslint-disable-next-line no-console
    console.error('Migration 003 failed:', err);
    process.exit(1);
  });


